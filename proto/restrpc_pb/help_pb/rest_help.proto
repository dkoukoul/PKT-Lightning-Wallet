syntax = "proto3";

package help_pb;
option go_package = "github.com/pkt-cash/pktd/generated/proto/restrpc_pb/help_pb";

/*
 * Comments in this file will be directly parsed into the API
 * Documentation as descriptions of the associated method, message, or field.
 * These descriptions should go right above the definition of the object, and
 * can be in either block or // comment format.
 *
 * See helpgen.go for the help generator
 */

// Informational flags regarding endpoints
enum F {
    // Endpoints which have "experimental" stability, may be changed or removed at any time
    EXPERIMENTAL = 0;
    // Endpoints with "unstable" stability, may be changed or removed with a major release
    UNSTABLE = 1;
    // Endpoints with "stable" stability, will not suffer breaking changes without a deprecation cycle
    STABLE = 2;
    // Endpoints with "deprecated" stability, will be removed in next major release
    DEPRECATED = 3;
    // Endpoints which allow GET request
    ALLOW_GET = 4;
    // Endpoints which must be called using streaming websocket API
    STREAMING = 5;
}

// A brief description of an endpoint for use in the main /ai/v1/help
message EndpointSimple {
    // The path to get help about the specific endpoint
    string help_path = 1;
    // A very brief description of the endpoint
    string brief = 2;
}

// A response which is sent when querying /api/v1/openapi
message OpenAPI{
    string yaml = 1;
}

// The response which is sent back when querying the generic /api/v1/help
message Category{
    // A description of the category of RPC endpoints
    repeated string description = 2;
    // The endpoints in this category
    map<string, EndpointSimple> endpoints = 3;
    // Sub-categories if any
    map<string, Category> categories = 4;
}

// A representation of a field within a data structure
message Field {
    // The name of the field
    string name = 1;
    // A brief description of what the field does
    repeated string description = 2;
    // If true, the field is repeating (i.e. it is an array type)
    bool repeated = 3;
    // The data structure type of the field value
    Type type = 4;
}

// A representation of a data type / data structure
message Type {
    // The name of the type / data structure
    string name = 1;
    // A brief description of the type
    repeated string description = 2;
    // A list of the fields in this data type
    repeated Field fields = 3;
}

// The response which is sent back when making a query to get help about a given endpoint
message EndpointHelp{
    // The path to the RPC query which we are providing info about
    string path = 1;
    // A brief description of the RPC endpoint
    repeated string description = 3;
    // The data type of the request structure
    Type request = 4;
    // The data type of the response structure
    Type response = 5;
    // The features of this endpoint
    repeated F features = 6;
}
